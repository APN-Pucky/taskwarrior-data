#!/usr/bin/env bash

set -x

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
ROOTPATH=$(dirname "$SCRIPTPATH")

source "${ROOTPATH}/common.sh"

TASKWARRIOR_DATA_PATH=$(echo "$5" | cut -f2 -d:)
GIT_REPO=$(dirname "${TASKWARRIOR_DATA_PATH}")
LOG_FILE="${GIT_REPO}/git-sync.log"

echo -e "\n---------- $(date +%FT%T) ----------" >> "${LOG_FILE}"

echo "SCRIPT: $SCRIPT"
echo "SCRIPTPATH: $SCRIPTPATH"
echo "ROOTPATH: $ROOTPATH"

exit 1

# git-sync runs a long time, so replace it with a simple branch setting check below.
# SYNC_STATE=$(cd "${GIT_REPO}" && sh git-sync)
# SYNC_RESULT=$?

# if [[ ${SYNC_RESULT} -ne 0 ]]; then
#     echo "${SYNC_STATE}" | tee -a "${LOG_FILE}"
#     exit 1
# fi

BRANCH_NAME=$(git -C "${GIT_REPO}" symbolic-ref -q HEAD)
BRANCH_NAME=${BRANCH_NAME##refs/heads/}
SYNC_STATE=$(git -C "${GIT_REPO}" config --get --bool branch."$BRANCH_NAME".sync)

if [[ "true" != "${SYNC_STATE}" ]] ; then
    (
    echo "Setup the right git-sync configuration and make sure you have checked out the target branch."
    echo "Repo: ${GIT_REPO}"
    ) | tee -a "${LOG_FILE}"
    exit 1
fi

SCRIPT_PATH="$(cd -- "$(dirname "$TASKWARRIOR_DATA_PATH")" >/dev/null 2>&1 && pwd -P)"
DIRTY_FILES=$(git -C "${GIT_REPO}" status --porcelain)

if [[ -n "$DIRTY_FILES" ]]; then
    (
    echo "Found dirty files under the ${SCRIPT_PATH}:"
    echo "${DIRTY_FILES}"
    echo "Commit or resolve it before running task."
    ) | tee -a "${LOG_FILE}"
    exit 1
fi
